
# Generated by crate2nix 0.6.1 with the command:
#   "generate" "-n" "<nixos-unstable>"
# See https://github.com/kolloch/crate2nix for more info.

{ pkgs? import <nixos-unstable> { config = {}; },
  lib? pkgs.lib,
  callPackage? pkgs.callPackage,
  stdenv? pkgs.stdenv,
  buildRustCrate? pkgs.buildRustCrate,
  fetchurl? pkgs.fetchurl,
  fetchCrate? pkgs.fetchCrate,
  defaultCrateOverrides? pkgs.defaultCrateOverrides,
  # The features to enable for the root_crate or the workspace_members.
  rootFeatures? ["default"]}:

rec {
  #
  # "public" attributes that we attempt to keep stable with new versions of crate2nix.
  #

  
  # Refer your crate build derivation by name here.
  # You can override the features with
  # workspaceMembers."${crateName}".build.override { features = [ "default" "feature1" ... ]; }.
  workspaceMembers = {
    "evcxr" = {
      packageId = "evcxr 0.5.0 (path+file:///home/dkahlenberg/evcxr_jupyter/evcxr/evcxr)";
      build = buildRustCrateWithFeatures {
        packageId = "evcxr 0.5.0 (path+file:///home/dkahlenberg/evcxr_jupyter/evcxr/evcxr)";
        features = rootFeatures;
      };
    };
    "evcxr_image" = {
      packageId = "evcxr_image 1.0.0 (path+file:///home/dkahlenberg/evcxr_jupyter/evcxr/runtimes/evcxr_image)";
      build = buildRustCrateWithFeatures {
        packageId = "evcxr_image 1.0.0 (path+file:///home/dkahlenberg/evcxr_jupyter/evcxr/runtimes/evcxr_image)";
        features = rootFeatures;
      };
    };
    "evcxr_jupyter" = {
      packageId = "evcxr_jupyter 0.5.0 (path+file:///home/dkahlenberg/evcxr_jupyter/evcxr/evcxr_jupyter)";
      build = buildRustCrateWithFeatures {
        packageId = "evcxr_jupyter 0.5.0 (path+file:///home/dkahlenberg/evcxr_jupyter/evcxr/evcxr_jupyter)";
        features = rootFeatures;
      };
    };
    "evcxr_repl" = {
      packageId = "evcxr_repl 0.5.0 (path+file:///home/dkahlenberg/evcxr_jupyter/evcxr/evcxr_repl)";
      build = buildRustCrateWithFeatures {
        packageId = "evcxr_repl 0.5.0 (path+file:///home/dkahlenberg/evcxr_jupyter/evcxr/evcxr_repl)";
        features = rootFeatures;
      };
    };
    "evcxr_runtime" = {
      packageId = "evcxr_runtime 1.1.0 (path+file:///home/dkahlenberg/evcxr_jupyter/evcxr/evcxr_runtime)";
      build = buildRustCrateWithFeatures {
        packageId = "evcxr_runtime 1.1.0 (path+file:///home/dkahlenberg/evcxr_jupyter/evcxr/evcxr_runtime)";
        features = rootFeatures;
      };
    };
    "print_performance_info" = {
      packageId = "print_performance_info 0.1.0 (path+file:///home/dkahlenberg/evcxr_jupyter/evcxr/print_performance_info)";
      build = buildRustCrateWithFeatures {
        packageId = "print_performance_info 0.1.0 (path+file:///home/dkahlenberg/evcxr_jupyter/evcxr/print_performance_info)";
        features = rootFeatures;
      };
    };
  };
  workspace_members =
    builtins.trace
      "workspace_members is deprecated in crate2nix 0.4. Please use workspaceMembers instead."
      lib.mapAttrs (n: v: v.build) workspaceMembers;

  #
  # "private" attributes that may change in every new version of crate2nix.
  #

  # Build and dependency information for crates.
  # Many of the fields are passed one-to-one to buildRustCrate.
  #
  # Noteworthy:
  # * `crateBin = [{name = ","; path = ",";}];`: a hack to disable building the binary.
  # * `dependencies`/`buildDependencies`: similar to the corresponding fields for buildRustCrate.
  #   but with additional information which is used during dependency/feature resolution.
  # * `resolvedDependencies`: the selected default features reported by cargo - only included for debugging.

  crates = {
    "adler32 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "adler32";
        version = "1.0.4";
        edition = "2015";
        sha256 = "157bfkgcy4p3cclfv378x7clxcj3l23jj7sckjbqkmdjbi72y134";
        authors = [
          "Remi Rampin <remirampin@gmail.com>"
        ];
        features = {
        };
      };
    "ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ansi_term";
        version = "0.11.0";
        edition = "2015";
        sha256 = "08fk0p2xvkqpmz3zlrwnf6l8sj2vngw464rvzspzp31sbgxbwm4v";
        authors = [
          "ogham@bsago.me"
          "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>"
          "Josh Triplett <josh@joshtriplett.org>"
        ];
        dependencies = {
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "windows");
            features = [ "errhandlingapi" "consoleapi" "processenv" ];
          };
        };
        features = {
        };
      };
    "arrayref 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "arrayref";
        version = "0.3.6";
        edition = "2015";
        sha256 = "0s5k9qc9rq1yd6idrn79jwp4lhc9mp7dydcqbz492nxnyfpv4044";
        authors = [
          "David Roundy <roundyd@physics.oregonstate.edu>"
        ];
        features = {
        };
      };
    "arrayvec 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "arrayvec";
        version = "0.5.1";
        edition = "2018";
        sha256 = "01fc06ab7zh75z26m2l4a0fc7zy4zpr962qazdcp9hl4fgdwbj6v";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "std" ];
        };
      };
    "atty 0.2.14 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "atty";
        version = "0.2.14";
        edition = "2015";
        sha256 = "18x3dv3clg1qyf0skj16b9zd9679dav2r81in85zdmb5aqd25564";
        authors = [
          "softprops <d.tangren@gmail.com>"
        ];
        dependencies = {
          "hermit-abi" = {
            packageId = "hermit-abi 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "hermit");
          };
          "libc" = {
            packageId = "libc 0.2.67 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            target = target."unix";
          };
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "consoleapi" "processenv" "minwinbase" "minwindef" "winbase" ];
          };
        };
        features = {
        };
      };
    "autocfg 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "autocfg";
        version = "0.1.7";
        edition = "2015";
        sha256 = "01iq4rs9kanj88pbwjxzqp5k4bgdsvz3y398nljz441rfws11mi4";
        authors = [
          "Josh Stone <cuviper@gmail.com>"
        ];
        features = {
        };
      };
    "autocfg 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "autocfg";
        version = "1.0.0";
        edition = "2015";
        sha256 = "1hhgqh551gmws22z9rxbnsvlppwxvlj0nszj7n1x56pqa3j3swy7";
        authors = [
          "Josh Stone <cuviper@gmail.com>"
        ];
        features = {
        };
      };
    "backtrace 0.3.44 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "backtrace";
        version = "0.3.44";
        edition = "2018";
        sha256 = "19i5ary8nwk14k0z7gwdwlhs6h3ha9s44942qdy54xi0sbmwqnv0";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "backtrace-sys" = {
            packageId = "backtrace-sys 0.1.32 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "cfg-if" = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = {
            packageId = "libc 0.2.67 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "rustc-demangle" = "rustc-demangle 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "std" "libunwind" "libbacktrace" "dladdr" "dbghelp" ];
          "gimli-symbolize" = [ "addr2line" "findshlibs" "memmap" "goblin" ];
          "libbacktrace" = [ "backtrace-sys" ];
          "rustc-dep-of-std" = [ "backtrace-sys/rustc-dep-of-std" "cfg-if/rustc-dep-of-std" "core" "compiler_builtins" "libc/rustc-dep-of-std" "rustc-demangle/rustc-dep-of-std" ];
          "serialize-rustc" = [ "rustc-serialize" ];
          "serialize-serde" = [ "serde" ];
          "verify-winapi" = [ "winapi/dbghelp" "winapi/handleapi" "winapi/libloaderapi" "winapi/minwindef" "winapi/processthreadsapi" "winapi/synchapi" "winapi/winbase" "winapi/winnt" ];
        };
        resolvedDefaultFeatures = [ "backtrace-sys" "dbghelp" "default" "dladdr" "libbacktrace" "libunwind" "std" ];
      };
    "backtrace-sys 0.1.32 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "backtrace-sys";
        version = "0.1.32";
        edition = "2015";
        sha256 = "1jrb7450v9kyqrjc97vzckbpwj9jakvc1jkq95i46g6mn9kvqkgr";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "libc" = {
            packageId = "libc 0.2.67 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        buildDependencies = {
          "cc" = "cc 1.0.50 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
    "base64 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "base64";
        version = "0.10.1";
        edition = "2015";
        sha256 = "1zz3jq619hahla1f70ra38818b5n8cp4iilij81i90jq6z7hlfhg";
        authors = [
          "Alice Maz <alice@alicemaz.com>"
          "Marshall Pierce <marshall@mpierce.org>"
        ];
        dependencies = {
          "byteorder" = "byteorder 1.3.4 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "base64 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "base64";
        version = "0.11.0";
        edition = "2018";
        sha256 = "1idkqdfza39zyhl7ml4i2wq6dv2y331vj2nm9lshvmqbrc23j890";
        authors = [
          "Alice Maz <alice@alicemaz.com>"
          "Marshall Pierce <marshall@mpierce.org>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "bitflags";
        version = "1.2.1";
        edition = "2015";
        sha256 = "0b77awhpn7yaqjjibm69ginfn996azx5vkzfjj39g3wbsqs7mkxg";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "blake2b_simd 0.5.10 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "blake2b_simd";
        version = "0.5.10";
        edition = "2018";
        sha256 = "1yf72mkvjw1gaw62cbijjvk8igvn1bzv9j4zrghg8awhlpygzw0n";
        authors = [
          "Jack O'Connor"
        ];
        dependencies = {
          "arrayref" = "arrayref 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "arrayvec" = {
            packageId = "arrayvec 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "constant_time_eq" = "constant_time_eq 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "block-buffer 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "block-buffer";
        version = "0.7.3";
        edition = "2015";
        sha256 = "0kryp6l1ia1f5vxmmzggx0pnc5zqxm6m9m9wvh5y0b3wdcj5xm1v";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = {
          "block-padding" = "block-padding 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "byte-tools" = "byte-tools 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "byteorder" = {
            packageId = "byteorder 1.3.4 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "generic-array" = "generic-array 0.12.3 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "block-padding 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "block-padding";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1v1xjpkkkb1skjniy75f2vg1g8s8wma29a8xph11fjarrimjk5sr";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = {
          "byte-tools" = "byte-tools 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "byte-tools 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "byte-tools";
        version = "0.3.1";
        edition = "2015";
        sha256 = "01hfp59bxq74glhfmhvm9wma2migq2kfmvcvqq5pssk5k52g8ja0";
        authors = [
          "RustCrypto Developers"
        ];
        features = {
        };
      };
    "byteorder 1.3.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "byteorder";
        version = "1.3.4";
        edition = "2015";
        sha256 = "1hi7ixdls5qssw39wgp1gm8d20yjghgawc3m4xr2wkxmxsv08krz";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "c2-chacha 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "c2-chacha";
        version = "0.2.3";
        edition = "2018";
        sha256 = "04vh0cc9g94cj6cq96sfv3lks7rx486jdn43rmqcvb2syh4y9dqj";
        authors = [
          "The CryptoCorrosion Contributors"
        ];
        dependencies = {
          "ppv-lite86" = {
            packageId = "ppv-lite86 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)";
            rename = "ppv-lite86";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "std" "simd" "rustcrypto_api" ];
          "rustcrypto_api" = [ "stream-cipher" "byteorder" ];
          "simd" = [ "ppv-lite86/simd" ];
          "std" = [ "ppv-lite86/std" ];
        };
        resolvedDefaultFeatures = [ "simd" "std" ];
      };
    "cc 1.0.50 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "cc";
        version = "1.0.50";
        edition = "2018";
        # Hack to suppress building binaries
        crateBin = [{name = ","; path = ",";}];
        sha256 = "1di84m338b9c42vfq86g5lyq5s03i0zfvvf59dvb6mr37z063h1d";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "parallel" = [ "jobserver" ];
        };
      };
    "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "cfg-if";
        version = "0.1.10";
        edition = "2018";
        sha256 = "0x52qzpbyl2f2jqs7kkqzgfki2cpq99gpfjjigdp8pwwfqk01007";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
    "chrono 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "chrono";
        version = "0.4.10";
        edition = "2015";
        sha256 = "13yj8csdvzzcrw8g4946rip5wgvviafg6cg01m1r32vgnssb2kr5";
        authors = [
          "Kang Seonghoon <public+rust@mearie.org>"
          "Brandon W Maister <quodlibetor@gmail.com>"
        ];
        dependencies = {
          "num-integer" = {
            packageId = "num-integer 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "num-traits" = {
            packageId = "num-traits 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "time" = {
            packageId = "time 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "bench" = [ "std" ];
          "clock" = [ "time" "std" ];
          "default" = [ "clock" "std" ];
          "wasmbind" = [ "wasm-bindgen" "js-sys" ];
        };
        resolvedDefaultFeatures = [ "clock" "default" "std" "time" ];
      };
    "clap 2.33.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "clap";
        version = "2.33.0";
        edition = "2015";
        sha256 = "054n9ngh6pkknpmd4acgdsp40iw6f5jzq8a4h2b76gnbvk6p5xjh";
        authors = [
          "Kevin K. <kbknapp@gmail.com>"
        ];
        dependencies = {
          "ansi_term" = {
            packageId = "ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = (!target."windows");
          };
          "atty" = {
            packageId = "atty 0.2.14 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "bitflags" = "bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "strsim" = {
            packageId = "strsim 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "textwrap" = "textwrap 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "unicode-width" = "unicode-width 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
          "vec_map" = {
            packageId = "vec_map 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "color" = [ "ansi_term" "atty" ];
          "default" = [ "suggestions" "color" "vec_map" ];
          "doc" = [ "yaml" ];
          "lints" = [ "clippy" ];
          "suggestions" = [ "strsim" ];
          "wrap_help" = [ "term_size" "textwrap/term_size" ];
          "yaml" = [ "yaml-rust" ];
        };
        resolvedDefaultFeatures = [ "ansi_term" "atty" "color" "default" "strsim" "suggestions" "vec_map" ];
      };
    "cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "cloudabi";
        version = "0.0.3";
        edition = "2015";
        sha256 = "1z9lby5sr6vslfd14d6igk03s7awf91mxpsfmsp3prxbxlk0x7h5";
        libPath = "cloudabi.rs";
        authors = [
          "Nuxi (https://nuxi.nl/) and contributors"
        ];
        dependencies = {
          "bitflags" = {
            packageId = "bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "default" = [ "bitflags" ];
        };
        resolvedDefaultFeatures = [ "bitflags" "default" ];
      };
    "cmake 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "cmake";
        version = "0.1.42";
        edition = "2015";
        sha256 = "13i927y08m2556isvwan2hm6niaz19z0r8m9ic0lj8dczv3alp9g";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "cc" = "cc 1.0.50 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "color_quant 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "color_quant";
        version = "1.0.1";
        edition = "2015";
        sha256 = "12rqk6rbw4klnlr6q6njhsjllsg0nsvhm8g04sazhpkk4mw9mn8q";
        authors = [
          "nwin <nwin@users.noreply.github.com>"
        ];
        features = {
        };
      };
    "colored 1.9.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "colored";
        version = "1.9.3";
        edition = "2015";
        sha256 = "0ql1ag7j9kqk6inyzf9i28695cscw7ixdwis8xn40m07izvprzda";
        authors = [
          "Thomas Wickham <mackwic@gmail.com>"
        ];
        dependencies = {
          "atty" = "atty 0.2.14 (registry+https://github.com/rust-lang/crates.io-index)";
          "lazy_static" = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            target = target."windows";
            features = [ "consoleapi" "processenv" "winbase" ];
          };
        };
        features = {
        };
      };
    "constant_time_eq 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "constant_time_eq";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1dvk7vvfdbvg3k2r7m4n5scj82vv519cmm8695jqqnkh4wm670fv";
        authors = [
          "Cesar Eduardo Barros <cesarb@cesarb.eti.br>"
        ];
        features = {
        };
      };
    "crc32fast 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crc32fast";
        version = "1.2.0";
        edition = "2015";
        sha256 = "1mx88ndqln6vzg7hjhjp8b7g0qggpqggsjrlsdqrfsrbpdzffcn8";
        authors = [
          "Sam Rijs <srijs@airpost.net>"
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "crossbeam-deque 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crossbeam-deque";
        version = "0.7.3";
        edition = "2015";
        sha256 = "1ib3h4brflwmkbaiv351p8ahcd6srp98c4rxwxq876grl9jarp53";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = {
          "crossbeam-epoch" = "crossbeam-epoch 0.8.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "crossbeam-utils" = "crossbeam-utils 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "maybe-uninit" = "maybe-uninit 2.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "crossbeam-epoch 0.8.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crossbeam-epoch";
        version = "0.8.2";
        edition = "2015";
        sha256 = "050dkgjrxgag2lj2zwxqdaz72y4kjpqr2pa36nm40szx8crfhq3v";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          "crossbeam-utils" = {
            packageId = "crossbeam-utils 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "lazy_static" = {
            packageId = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "maybe-uninit" = "maybe-uninit 2.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "memoffset" = "memoffset 0.5.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "scopeguard" = {
            packageId = "scopeguard 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        buildDependencies = {
          "autocfg" = "autocfg 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "alloc" = [ "crossbeam-utils/alloc" ];
          "default" = [ "std" ];
          "nightly" = [ "crossbeam-utils/nightly" ];
          "std" = [ "crossbeam-utils/std" "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
    "crossbeam-queue 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crossbeam-queue";
        version = "0.2.1";
        edition = "2015";
        sha256 = "0md089d21a9m0l3v6zcjwd9swmsdwcgknzj6fv2p9bn0v80n2hbb";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          "crossbeam-utils" = {
            packageId = "crossbeam-utils 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "alloc" = [ "crossbeam-utils/alloc" ];
          "default" = [ "std" ];
          "std" = [ "crossbeam-utils/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "crossbeam-utils 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crossbeam-utils";
        version = "0.7.2";
        edition = "2015";
        sha256 = "17n0299c5y4d9pv4zr72shlx6klc0kl3mqmdgrvh70yg4bjr3837";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          "lazy_static" = {
            packageId = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        buildDependencies = {
          "autocfg" = "autocfg 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "std" ];
          "std" = [ "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
    "crypto-mac 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crypto-mac";
        version = "0.7.0";
        edition = "2015";
        sha256 = "0kdsnk9930cdp5z7m239i9sf0yrsrc9hdhjwkpsd6sfr0i33q0qq";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = {
          "generic-array" = "generic-array 0.12.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "subtle" = {
            packageId = "subtle 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "dev" = [ "blobby" ];
        };
      };
    "deflate 0.7.20 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "deflate";
        version = "0.7.20";
        edition = "2015";
        sha256 = "1b2c209lcmk023awvv5dl1hbfaqfhzi3bpl8xq8w39skjbgyckx8";
        authors = [
          "oyvindln <oyvindln@users.noreply.github.com>"
        ];
        dependencies = {
          "adler32" = "adler32 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "byteorder" = "byteorder 1.3.4 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "gzip" = [ "gzip-header" ];
        };
      };
    "digest 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "digest";
        version = "0.8.1";
        edition = "2015";
        sha256 = "18jzwdsfl90bzhbk5ny4rgakhwn3l7pqk2mmqvl4ccb0qy4lhbyr";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = {
          "generic-array" = "generic-array 0.12.3 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "dev" = [ "blobby" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
    "dirs 2.0.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "dirs";
        version = "2.0.2";
        edition = "2015";
        sha256 = "0zk0kdnl2hd3qk76yq6yk7hc7s73gpnnzi1p208ygrh270y96fpx";
        authors = [
          "Simon Ochsenreither <simon@ochsenreither.de>"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          "dirs-sys" = "dirs-sys 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "dirs-sys 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "dirs-sys";
        version = "0.3.4";
        edition = "2015";
        sha256 = "1hb7h6g5xyhc26v8d8fksxfw1gv6kl427jzp9vhl7y8v6992d80d";
        authors = [
          "Simon Ochsenreither <simon@ochsenreither.de>"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = {
            packageId = "libc 0.2.67 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
          "redox_users" = {
            packageId = "redox_users 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "redox");
          };
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "knownfolders" "objbase" "shlobj" "winbase" "winerror" ];
          };
        };
        features = {
        };
      };
    "either 1.5.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "either";
        version = "1.5.3";
        edition = "2015";
        sha256 = "040fgh0jahqra9ascwb986zgll1ss88ky9bfvn0zfay42zsyz83n";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
      };
    "error-chain 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "error-chain";
        version = "0.10.0";
        edition = "2015";
        sha256 = "1xxbzd8cjlpzsb9fsih7mdnndhzrvykj0w77yg90qc85az1xwy5z";
        authors = [
          "Brian Anderson <banderson@mozilla.com>"
          "Paul Colomiets <paul@colomiets.name>"
          "Colin Kiegel <kiegel@gmx.de>"
          "Yamakaky <yamakaky@yamaworld.fr>"
        ];
        features = {
          "default" = [ "backtrace" "example_generated" ];
        };
      };
    "evcxr 0.5.0 (git+https://github.com/google/evcxr?rev=f7050ef088b5d9b297c92cd86b087f6ddd527161#f7050ef088b5d9b297c92cd86b087f6ddd527161)"
      = rec {
        crateName = "evcxr";
        version = "0.5.0";
        edition = "2018";
        # Hack to suppress building binaries
        crateBin = [{name = ","; path = ",";}];
        src = builtins.fetchGit {
          url = "https://github.com/google/evcxr";
          rev = "f7050ef088b5d9b297c92cd86b087f6ddd527161";
        };
        authors = [
          "David Lattimore <dvdlttmr@gmail.com>"
          "Matthias Bussonnier <bussonniermatthias@gmail.com>"
          "Daniel Griffen <daniel@griffen.io>"
          "David Bernard <david.bernard.31@gmail.com>"
        ];
        dependencies = {
          "backtrace" = "backtrace 0.3.44 (registry+https://github.com/rust-lang/crates.io-index)";
          "dirs" = "dirs 2.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "failure" = {
            packageId = "failure 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            features = [ "std" ];
          };
          "json" = "json 0.11.15 (registry+https://github.com/rust-lang/crates.io-index)";
          "lazy_static" = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = "libc 0.2.67 (registry+https://github.com/rust-lang/crates.io-index)";
          "libloading" = "libloading 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "proc-macro2" = {
            packageId = "proc-macro2 1.0.9 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "regex" = {
            packageId = "regex 1.3.4 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            features = [ "std" ];
          };
          "sig" = {
            packageId = "sig 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
          "syn" = {
            packageId = "syn 1.0.16 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            features = [ "parsing" "full" "printing" "clone-impls" "extra-traits" "visit" ];
          };
          "tempfile" = "tempfile 3.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "which" = "which 2.0.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "evcxr 0.5.0 (path+file:///home/dkahlenberg/evcxr_jupyter/evcxr/evcxr)"
      = rec {
        crateName = "evcxr";
        version = "0.5.0";
        edition = "2018";
        src = (builtins.filterSource sourceFilter ./evcxr);
        authors = [
          "David Lattimore <dvdlttmr@gmail.com>"
          "Matthias Bussonnier <bussonniermatthias@gmail.com>"
          "Daniel Griffen <daniel@griffen.io>"
          "David Bernard <david.bernard.31@gmail.com>"
        ];
        dependencies = {
          "backtrace" = "backtrace 0.3.44 (registry+https://github.com/rust-lang/crates.io-index)";
          "dirs" = "dirs 2.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "failure" = {
            packageId = "failure 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            features = [ "std" ];
          };
          "json" = "json 0.11.15 (registry+https://github.com/rust-lang/crates.io-index)";
          "lazy_static" = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = "libc 0.2.67 (registry+https://github.com/rust-lang/crates.io-index)";
          "libloading" = "libloading 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "proc-macro2" = {
            packageId = "proc-macro2 1.0.9 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "regex" = {
            packageId = "regex 1.3.4 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            features = [ "std" ];
          };
          "sig" = {
            packageId = "sig 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
          "syn" = {
            packageId = "syn 1.0.16 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            features = [ "parsing" "full" "printing" "clone-impls" "extra-traits" "visit" ];
          };
          "tempfile" = "tempfile 3.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "which" = "which 2.0.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "evcxr_image 1.0.0 (path+file:///home/dkahlenberg/evcxr_jupyter/evcxr/runtimes/evcxr_image)"
      = rec {
        crateName = "evcxr_image";
        version = "1.0.0";
        edition = "2018";
        src = (builtins.filterSource sourceFilter ./runtimes/evcxr_image);
        authors = [
          "David Lattimore <dml@google.com>"
        ];
        dependencies = {
          "evcxr_runtime" = {
            packageId = "evcxr_runtime 1.1.0 (path+file:///home/dkahlenberg/evcxr_jupyter/evcxr/evcxr_runtime)";
            features = [ "bytes" ];
          };
          "image" = "image 0.22.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "evcxr_jupyter 0.5.0 (path+file:///home/dkahlenberg/evcxr_jupyter/evcxr/evcxr_jupyter)"
      = rec {
        crateName = "evcxr_jupyter";
        version = "0.5.0";
        edition = "2018";
        src = (builtins.filterSource sourceFilter ./evcxr_jupyter);
        authors = [
          "David Lattimore <dvdlttmr@gmail.com>"
          "David Bernard <david.bernard.31@gmail.com>"
        ];
        dependencies = {
          "chrono" = "chrono 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)";
          "colored" = "colored 1.9.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "dirs" = "dirs 2.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "evcxr" = "evcxr 0.5.0 (git+https://github.com/google/evcxr?rev=f7050ef088b5d9b297c92cd86b087f6ddd527161#f7050ef088b5d9b297c92cd86b087f6ddd527161)";
          "failure" = {
            packageId = "failure 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            features = [ "std" ];
          };
          "hex" = "hex 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "hmac" = "hmac 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "json" = "json 0.11.15 (registry+https://github.com/rust-lang/crates.io-index)";
          "sha2" = "sha2 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "uuid" = {
            packageId = "uuid 0.7.4 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "v4" ];
          };
          "zmq" = {
            packageId = "zmq 0.9.2 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "vendored-zmq" ];
          "vendored-zmq" = [ "zmq/vendored" ];
        };
        resolvedDefaultFeatures = [ "default" "vendored-zmq" ];
      };
    "evcxr_repl 0.5.0 (path+file:///home/dkahlenberg/evcxr_jupyter/evcxr/evcxr_repl)"
      = rec {
        crateName = "evcxr_repl";
        version = "0.5.0";
        edition = "2018";
        src = (builtins.filterSource sourceFilter ./evcxr_repl);
        authors = [
          "David Lattimore <dvdlttmr@gmail.com>"
          "Diogo Sousa <diogogsousa@gmail.com>"
        ];
        dependencies = {
          "colored" = "colored 1.9.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "evcxr" = "evcxr 0.5.0 (path+file:///home/dkahlenberg/evcxr_jupyter/evcxr/evcxr)";
          "failure" = {
            packageId = "failure 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            features = [ "std" ];
          };
          "lazy_static" = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "regex" = {
            packageId = "regex 1.3.4 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            features = [ "std" ];
          };
          "rustyline" = "rustyline 6.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "structopt" = "structopt 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)";
          "unicode-xid" = "unicode-xid 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "evcxr_runtime 1.1.0 (path+file:///home/dkahlenberg/evcxr_jupyter/evcxr/evcxr_runtime)"
      = rec {
        crateName = "evcxr_runtime";
        version = "1.1.0";
        edition = "2015";
        src = (builtins.filterSource sourceFilter ./evcxr_runtime);
        authors = [
          "David Lattimore <dvdlttmr@gmail.com>"
          "David Bernard <david.bernard.31@gmail.com>"
        ];
        dependencies = {
          "base64" = {
            packageId = "base64 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "bytes" = [ "base64" ];
        };
        resolvedDefaultFeatures = [ "base64" "bytes" ];
      };
    "failure 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "failure";
        version = "0.1.6";
        edition = "2015";
        sha256 = "09qsxzrxzqz7h76sd5klfk6nq407way77j898519ll7pr5yk3j65";
        authors = [
          "Without Boats <boats@mozilla.com>"
        ];
        dependencies = {
          "backtrace" = {
            packageId = "backtrace 0.3.44 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "default" = [ "std" "derive" ];
          "derive" = [ "failure_derive" ];
          "std" = [ "backtrace" ];
        };
        resolvedDefaultFeatures = [ "backtrace" "std" ];
      };
    "fake-simd 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "fake-simd";
        version = "0.1.2";
        edition = "2015";
        sha256 = "1a0f1j66nkwfy17s06vm2bn9vh8vy8llcijfhh9m10p58v08661a";
        authors = [
          "The Rust-Crypto Project Developers"
        ];
        features = {
        };
      };
    "fuchsia-cprng 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "fuchsia-cprng";
        version = "0.1.1";
        edition = "2018";
        sha256 = "07apwv9dj716yjlcj29p94vkqn5zmfh7hlrqvrjx3wzshphc95h9";
        authors = [
          "Erick Tryzelaar <etryzelaar@google.com>"
        ];
        features = {
        };
      };
    "generic-array 0.12.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "generic-array";
        version = "0.12.3";
        edition = "2015";
        sha256 = "1b6bvl1zsh5v9d85szkqfq4sw33xsw03mhchjk3zwxs29psg3nns";
        libName = "generic_array";
        authors = [
          "Bartłomiej Kamiński <fizyk20@gmail.com>"
          "Aaron Trent <novacrazy@gmail.com>"
        ];
        dependencies = {
          "typenum" = "typenum 1.11.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "getrandom 0.1.14 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "getrandom";
        version = "0.1.14";
        edition = "2018";
        sha256 = "1i6r4q7i24zdy6v5h3l966a1cf8a1aip2fi1pmdsi71sk1m3w7wr";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = {
            packageId = "libc 0.2.67 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            target = target."unix";
          };
          "wasi" = {
            packageId = "wasi 0.9.0+wasi-snapshot-preview1 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "wasi");
          };
        };
        features = {
          "rustc-dep-of-std" = [ "compiler_builtins" "core" ];
          "test-in-browser" = [ "wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
    "gif 0.10.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "gif";
        version = "0.10.3";
        edition = "2015";
        sha256 = "0880cvcydiq5b1r0cwwm228vimigsbq6i0wb220gd97m4p3ygd0a";
        authors = [
          "nwin <nwin@users.noreply.github.com>"
        ];
        dependencies = {
          "color_quant" = "color_quant 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "lzw" = "lzw 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "c_api" = [ "libc" ];
          "default" = [ "raii_no_panic" ];
        };
        resolvedDefaultFeatures = [ "default" "raii_no_panic" ];
      };
    "heck 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "heck";
        version = "0.3.1";
        edition = "2015";
        sha256 = "1q7vmnlh62kls6cvkfhbcacxkawaznaqa5wwm9dg1xkcza846c3d";
        authors = [
          "Without Boats <woboats@gmail.com>"
        ];
        dependencies = {
          "unicode-segmentation" = "unicode-segmentation 1.6.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "hermit-abi 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "hermit-abi";
        version = "0.1.8";
        edition = "2015";
        sha256 = "1298mrpr19rabpx8a6p6gpiws2nwwdhj4jg0zxd5wim42s7hawr5";
        authors = [
          "Stefan Lankes"
        ];
        dependencies = {
          "libc" = {
            packageId = "libc 0.2.67 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins/rustc-dep-of-std" "libc/rustc-dep-of-std" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "hex 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "hex";
        version = "0.3.2";
        edition = "2015";
        sha256 = "0hs0xfb4x67y4ss9mmbjmibkwakbn3xf23i21m409bw2zqk9b6kz";
        authors = [
          "KokaKiwi <kokakiwi@kokakiwi.net>"
        ];
        features = {
        };
      };
    "hmac 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "hmac";
        version = "0.7.1";
        edition = "2015";
        sha256 = "16jlw514fchnc82rgjbd4x2z19kmqlkfm2h1bsxnv5cs36j58zdl";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = {
          "crypto-mac" = "crypto-mac 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "digest" = "digest 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "image 0.22.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "image";
        version = "0.22.5";
        edition = "2015";
        sha256 = "0viszdlhfb0n8sfhmqlbvgnryvv5fk1hm95ciagq5fvj7kdbnq53";
        authors = [
          "ccgn"
          "bvssvni <bvssvni@gmail.com>"
          "nwin"
          "TyOverby <ty@pre-alpha.com>"
          "HeroicKatora"
          "Calum"
          "CensoredUsername <cens.username@gmail.com>"
          "fintelia <fintelia@gmail.com>"
        ];
        dependencies = {
          "byteorder" = "byteorder 1.3.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "gif" = {
            packageId = "gif 0.10.3 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "jpeg-decoder" = {
            packageId = "jpeg-decoder 0.1.18 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
          };
          "num-iter" = "num-iter 0.1.40 (registry+https://github.com/rust-lang/crates.io-index)";
          "num-rational" = {
            packageId = "num-rational 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "num-traits" = "num-traits 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)";
          "png" = {
            packageId = "png 0.15.3 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "scoped_threadpool" = {
            packageId = "scoped_threadpool 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "tiff" = {
            packageId = "tiff 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "default" = [ "gif_codec" "jpeg" "ico" "png_codec" "pnm" "tga" "tiff" "webp" "bmp" "hdr" "dxt" "jpeg_rayon" ];
          "gif_codec" = [ "gif" ];
          "hdr" = [ "scoped_threadpool" ];
          "ico" = [ "bmp" "png_codec" ];
          "jpeg" = [ "jpeg-decoder" ];
          "jpeg_rayon" = [ "jpeg-decoder/rayon" ];
          "png_codec" = [ "png" ];
        };
        resolvedDefaultFeatures = [ "bmp" "default" "dxt" "gif" "gif_codec" "hdr" "ico" "jpeg" "jpeg-decoder" "jpeg_rayon" "png" "png_codec" "pnm" "scoped_threadpool" "tga" "tiff" "webp" ];
      };
    "inflate 0.4.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "inflate";
        version = "0.4.5";
        edition = "2015";
        sha256 = "0dq5n218vdckp4q1m8b4vpg14bk3x98dvxcg51780ps0hpa2c9sm";
        authors = [
          "nwin <nwin@users.noreply.github.com>"
        ];
        dependencies = {
          "adler32" = "adler32 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "jpeg-decoder 0.1.18 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "jpeg-decoder";
        version = "0.1.18";
        edition = "2015";
        sha256 = "00i16y2rx63p6p3smq6wvca6pg504gcnk85l8zq406ljml0bxzp6";
        authors = [
          "Ulf Nilsson <kaksmet@gmail.com>"
        ];
        dependencies = {
          "byteorder" = "byteorder 1.3.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "rayon" = {
            packageId = "rayon 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "default" = [ "rayon" ];
        };
        resolvedDefaultFeatures = [ "rayon" ];
      };
    "json 0.11.15 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "json";
        version = "0.11.15";
        edition = "2015";
        sha256 = "1bcwvrzpfsf3bds4qj3kh1rxmyipdhra3wpfjqcajijb8bklj84n";
        authors = [
          "Maciej Hirsz <hello@maciej.codes>"
        ];
        features = {
        };
      };
    "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "lazy_static";
        version = "1.4.0";
        edition = "2015";
        sha256 = "13h6sdghdcy7vcqsm2gasfw3qg7ssa0fl3sw7lq6pdkbk52wbyfr";
        authors = [
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        features = {
          "spin_no_std" = [ "spin" ];
        };
      };
    "libc 0.2.67 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "libc";
        version = "0.2.67";
        edition = "2015";
        sha256 = "079p266r5md4yk6j2938fs9xk0py1srasprc6vdnsdshd9fh7yny";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "std" ];
          "rustc-dep-of-std" = [ "align" "rustc-std-workspace-core" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "libloading 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "libloading";
        version = "0.5.2";
        edition = "2015";
        sha256 = "1f1nrlbw1y5dvgsfbl6a8q7wfhn6n158yf8fh5b9cm98phg4pjl8";
        authors = [
          "Simonas Kazlauskas <libloading@kazlauskas.me>"
        ];
        dependencies = {
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "winerror" "errhandlingapi" "libloaderapi" ];
          };
        };
        buildDependencies = {
          "cc" = "cc 1.0.50 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "log";
        version = "0.4.8";
        edition = "2015";
        sha256 = "0wvzzzcn89dai172rrqcyz06pzldyyy0lf0w71csmn206rdpnb15";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "kv_unstable_sval" = [ "kv_unstable" "sval/fmt" ];
        };
      };
    "lzw 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "lzw";
        version = "0.10.0";
        edition = "2015";
        sha256 = "1cfsy2w26kbz9bjaqp9dh1wyyh47rpmhwvj4jpc1rmffbf438fvb";
        authors = [
          "nwin <nwin@users.noreply.github.com>"
        ];
        features = {
          "default" = [ "raii_no_panic" ];
        };
        resolvedDefaultFeatures = [ "default" "raii_no_panic" ];
      };
    "maybe-uninit 2.0.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "maybe-uninit";
        version = "2.0.0";
        edition = "2015";
        sha256 = "0crrwlngxjswhcnw8dvsccx8qnm2cbp4fvq6xhz3akmznvnv77gk";
        authors = [
          "est31 <MTest31@outlook.com>"
          "The Rust Project Developers"
        ];
        features = {
        };
      };
    "memchr 2.3.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "memchr";
        version = "2.3.3";
        edition = "2015";
        sha256 = "1ivxvlswglk6wd46gadkbbsknr94gwryk6y21v64ja7x4icrpihw";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
          "bluss"
        ];
        features = {
          "default" = [ "std" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "memoffset 0.5.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "memoffset";
        version = "0.5.3";
        edition = "2015";
        sha256 = "1200gjmjqjh3dl78ndb7b833hmy5s0ly1zcgxcrzjmg95bn39c0s";
        authors = [
          "Gilad Naaman <gilad.naaman@gmail.com>"
        ];
        buildDependencies = {
          "rustc_version" = "rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "metadeps 1.1.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "metadeps";
        version = "1.1.2";
        edition = "2015";
        sha256 = "00dpxjls9fq6fs5gr9v3hkqxmb1zwnhh8b56q3dnzghppjf3ivk3";
        authors = [
          "Josh Triplett <josh@joshtriplett.org>"
        ];
        dependencies = {
          "error-chain" = {
            packageId = "error-chain 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "pkg-config" = "pkg-config 0.3.17 (registry+https://github.com/rust-lang/crates.io-index)";
          "toml" = {
            packageId = "toml 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
        };
      };
    "nix 0.14.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "nix";
        version = "0.14.1";
        edition = "2015";
        sha256 = "1hikdrihw975fcf3m2nmqjd7a00gxdzsbwjzlnjf6bgamr7ygipz";
        authors = [
          "The nix-rust Project Developers"
        ];
        dependencies = {
          "bitflags" = "bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "cfg-if" = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = "libc 0.2.67 (registry+https://github.com/rust-lang/crates.io-index)";
          "void" = "void 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        buildDependencies = {
          "cc" = {
            packageId = "cc 1.0.50 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "dragonfly");
          };
        };
        features = {
        };
      };
    "num-derive 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "num-derive";
        version = "0.2.5";
        edition = "2015";
        sha256 = "0i943i1d9hz152jvlkidkf0n9k5hsq7n53m0lnjq25h63ws0indi";
        procMacro = true;
        libName = "num_derive";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "proc-macro2" = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = "syn 0.15.44 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "full-syntax" = [ "syn/full" ];
        };
      };
    "num-integer 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "num-integer";
        version = "0.1.42";
        edition = "2015";
        sha256 = "08kffmbar1bl9hy4zlv3qnns29fwvm4c7vl0dlklkcw0k9lbg2wc";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "num-traits" = {
            packageId = "num-traits 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        buildDependencies = {
          "autocfg" = "autocfg 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "std" ];
          "i128" = [ "num-traits/i128" ];
          "std" = [ "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
    "num-iter 0.1.40 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "num-iter";
        version = "0.1.40";
        edition = "2015";
        sha256 = "1sh3hhslbf90d1v5i3wrgk2w4rwri4zdfs4arycplrfh6d4258qq";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "num-integer" = {
            packageId = "num-integer 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "num-traits" = {
            packageId = "num-traits 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        buildDependencies = {
          "autocfg" = "autocfg 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "std" ];
          "i128" = [ "num-integer/i128" "num-traits/i128" ];
          "std" = [ "num-integer/std" "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "num-rational 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "num-rational";
        version = "0.2.3";
        edition = "2015";
        sha256 = "1sf77d7ndl8whv90020sv3gk1hj7vkcvvj1n1z961bj147syip6d";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "num-integer" = {
            packageId = "num-integer 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "num-traits" = {
            packageId = "num-traits 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        buildDependencies = {
          "autocfg" = "autocfg 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "bigint" = [ "num-bigint" ];
          "bigint-std" = [ "bigint" "num-bigint/std" ];
          "default" = [ "bigint-std" "std" ];
          "i128" = [ "num-integer/i128" "num-traits/i128" ];
          "std" = [ "num-integer/std" "num-traits/std" ];
        };
      };
    "num-traits 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "num-traits";
        version = "0.2.11";
        edition = "2015";
        sha256 = "0vr6ca475yglxdz7qriasdziq0cqn54z0z1xkmiqlnjx30plwmbl";
        authors = [
          "The Rust Project Developers"
        ];
        buildDependencies = {
          "autocfg" = "autocfg 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "num_cpus 1.12.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "num_cpus";
        version = "1.12.0";
        edition = "2015";
        sha256 = "053115487n4v2v045gjp0wh0q3lziribn67hwxjdddqq95l2m45m";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = {
          "hermit-abi" = {
            packageId = "hermit-abi 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (((target."arch" == "x86_64") || (target."arch" == "aarch64")) && (target."os" == "hermit"));
          };
          "libc" = "libc 0.2.67 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "opaque-debug 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "opaque-debug";
        version = "0.2.3";
        edition = "2015";
        sha256 = "1did2dvmc88chf7qvs3c0qj5filfp6q75rmf2x9ljwlbwywv8lj5";
        authors = [
          "RustCrypto Developers"
        ];
        features = {
        };
      };
    "pkg-config 0.3.17 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "pkg-config";
        version = "0.3.17";
        edition = "2015";
        sha256 = "0f83cnls5a6y97k8b3a54xhmyrjybj29qq6rwvz450qdsy5ff8vj";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
        };
      };
    "png 0.15.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "png";
        version = "0.15.3";
        edition = "2018";
        sha256 = "1gacwmfxdw42si59vvsls3hgc6m778zsvj2nj0g5dws2s66c3q43";
        authors = [
          "nwin <nwin@users.noreply.github.com>"
        ];
        dependencies = {
          "bitflags" = "bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "crc32fast" = "crc32fast 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "deflate" = {
            packageId = "deflate 0.7.20 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "inflate" = "inflate 0.4.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "png-encoding" ];
          "png-encoding" = [ "deflate" ];
        };
        resolvedDefaultFeatures = [ "default" "deflate" "png-encoding" ];
      };
    "ppv-lite86 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ppv-lite86";
        version = "0.2.6";
        edition = "2018";
        sha256 = "1mlbp0713frbyvcbjmc5vl062b0vr58agkv3ar2qqi5plgy9b7ib";
        authors = [
          "The CryptoCorrosion Contributors"
        ];
        features = {
          "default" = [ "std" "simd" ];
        };
        resolvedDefaultFeatures = [ "simd" "std" ];
      };
    "print_performance_info 0.1.0 (path+file:///home/dkahlenberg/evcxr_jupyter/evcxr/print_performance_info)"
      = rec {
        crateName = "print_performance_info";
        version = "0.1.0";
        edition = "2018";
        src = (builtins.filterSource sourceFilter ./print_performance_info);
        authors = [
          "David Lattimore <dml@google.com>"
        ];
        dependencies = {
          "evcxr" = "evcxr 0.5.0 (path+file:///home/dkahlenberg/evcxr_jupyter/evcxr/evcxr)";
        };
        features = {
        };
      };
    "proc-macro-error 0.4.9 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "proc-macro-error";
        version = "0.4.9";
        edition = "2018";
        sha256 = "0xvsqw2w3zqvw6wmihm4kzkphb83vy8hakfnbsxr62zqfg7qidda";
        authors = [
          "CreepySkeleton <creepy-skeleton@yandex.ru>"
        ];
        dependencies = {
          "proc-macro-error-attr" = "proc-macro-error-attr 0.4.9 (registry+https://github.com/rust-lang/crates.io-index)";
          "proc-macro2" = "proc-macro2 1.0.9 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = {
            packageId = "syn 1.0.16 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        buildDependencies = {
          "rustversion" = "rustversion 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "proc-macro-error-attr 0.4.9 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "proc-macro-error-attr";
        version = "0.4.9";
        edition = "2018";
        sha256 = "0bzky9x80l0dblqlhwcdwh56jj2mz0x3i2brn21rdab57dd9fsla";
        procMacro = true;
        authors = [
          "CreepySkeleton <creepy-skeleton@yandex.ru>"
        ];
        dependencies = {
          "proc-macro2" = "proc-macro2 1.0.9 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "rustversion" = "rustversion 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = {
            packageId = "syn 1.0.16 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            features = [ "derive" "parsing" "proc-macro" ];
          };
          "syn-mid" = "syn-mid 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "proc-macro2";
        version = "0.4.30";
        edition = "2015";
        sha256 = "0iifv51wrm6r4r2gghw6rray3nv53zcap355bbz1nsmbhj5s09b9";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "unicode-xid" = "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
    "proc-macro2 1.0.9 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "proc-macro2";
        version = "1.0.9";
        edition = "2018";
        sha256 = "1kyip1rs0j3v1wafjn4ss03djs05ffxs2y7c2zi5064skhpxfzav";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "unicode-xid" = "unicode-xid 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
    "quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "quote";
        version = "0.6.13";
        edition = "2015";
        sha256 = "1hrvsin40i4q8swrhlj9057g7nsp0lg02h8zbzmgz14av9mzv8g8";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = {
            packageId = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" = [ "proc-macro2/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
    "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "quote";
        version = "1.0.2";
        edition = "2018";
        sha256 = "0r7030w7dymarn92gjgm02hsm04fwsfs6f1l20wdqiyrm9z8rs5q";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = {
            packageId = "proc-macro2 1.0.9 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" = [ "proc-macro2/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
    "rand 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand";
        version = "0.6.5";
        edition = "2015";
        sha256 = "0zbck48159aj8zrwzf80sd9xxh96w4f4968nshwjpysjvflimvgb";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = {
          "libc" = {
            packageId = "libc 0.2.67 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            target = target."unix";
          };
          "rand_chacha" = "rand_chacha 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand_core" = "rand_core 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand_hc" = "rand_hc 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand_isaac" = "rand_isaac 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand_jitter" = "rand_jitter 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand_os" = {
            packageId = "rand_os 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "rand_pcg" = "rand_pcg 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand_xorshift" = "rand_xorshift 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "minwindef" "ntsecapi" "profileapi" "winnt" ];
          };
        };
        buildDependencies = {
          "autocfg" = "autocfg 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "nightly" = [ "simd_support" ];
          "serde1" = [ "rand_core/serde1" "rand_isaac/serde1" "rand_xorshift/serde1" ];
          "simd_support" = [ "packed_simd" ];
          "std" = [ "rand_core/std" "alloc" "rand_os" "rand_jitter/std" ];
          "stdweb" = [ "rand_os/stdweb" ];
          "wasm-bindgen" = [ "rand_os/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "rand_os" "std" ];
      };
    "rand 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand";
        version = "0.7.3";
        edition = "2018";
        sha256 = "1amg6qj53ylq3ix22n27kmj1gyj6i15my36mkayr30ndymny0b8r";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = {
          "getrandom" = {
            packageId = "getrandom 0.1.14 (registry+https://github.com/rust-lang/crates.io-index)";
            rename = "getrandom_package";
            optional = true;
          };
          "libc" = {
            packageId = "libc 0.2.67 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
            target = target."unix";
          };
          "rand_chacha" = {
            packageId = "rand_chacha 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            target = (!(target."os" == "emscripten"));
          };
          "rand_core" = "rand_core 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand_hc" = {
            packageId = "rand_hc 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "emscripten");
          };
        };
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "getrandom" = [ "getrandom_package" "rand_core/getrandom" ];
          "nightly" = [ "simd_support" ];
          "simd_support" = [ "packed_simd" ];
          "small_rng" = [ "rand_pcg" ];
          "std" = [ "rand_core/std" "rand_chacha/std" "alloc" "getrandom" "libc" ];
          "stdweb" = [ "getrandom_package/stdweb" ];
          "wasm-bindgen" = [ "getrandom_package/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "getrandom" "getrandom_package" "libc" "std" ];
      };
    "rand_chacha 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_chacha";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0xnxm4mjd7wjnh18zxc1yickw58axbycp35ciraplqdfwn1gffwi";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = {
          "rand_core" = {
            packageId = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        buildDependencies = {
          "autocfg" = "autocfg 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "rand_chacha 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_chacha";
        version = "0.2.1";
        edition = "2018";
        sha256 = "0zpp3wmxhhmripb6bywhzhx5rfwl4dfbny85hpalwdj0sncv0p0k";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
          "The CryptoCorrosion Contributors"
        ];
        dependencies = {
          "c2-chacha" = {
            packageId = "c2-chacha 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            features = [ "simd" ];
          };
          "rand_core" = "rand_core 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "std" "simd" ];
          "std" = [ "c2-chacha/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
    "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_core";
        version = "0.3.1";
        edition = "2015";
        sha256 = "0q0ssgpj9x5a6fda83nhmfydy7a6c0wvxm0jhncsmjx8qp8gw91m";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = {
          "rand_core" = "rand_core 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "serde1" = [ "rand_core/serde1" ];
          "std" = [ "rand_core/std" ];
        };
      };
    "rand_core 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_core";
        version = "0.4.2";
        edition = "2015";
        sha256 = "18zpzwn4bl7lp9f36iacy8mvdnfrhfmzsl35gmln98dcindff2ly";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        features = {
          "serde1" = [ "serde" "serde_derive" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
    "rand_core 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_core";
        version = "0.5.1";
        edition = "2018";
        sha256 = "19qfnh77bzz0x2gfsk91h0gygy0z1s5l3yyc2j91gmprq60d6s3r";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = {
          "getrandom" = {
            packageId = "getrandom 0.1.14 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "serde1" = [ "serde" ];
          "std" = [ "alloc" "getrandom" "getrandom/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "getrandom" "std" ];
      };
    "rand_hc 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_hc";
        version = "0.1.0";
        edition = "2015";
        sha256 = "05agb75j87yp7y1zk8yf7bpm66hc0673r3dlypn0kazynr6fdgkz";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = {
          "rand_core" = {
            packageId = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
        };
      };
    "rand_hc 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_hc";
        version = "0.2.0";
        edition = "2018";
        sha256 = "0592q9kqcna9aiyzy6vp3fadxkkbpfkmi2cnkv48zhybr0v2yf01";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = {
          "rand_core" = "rand_core 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "rand_isaac 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_isaac";
        version = "0.1.1";
        edition = "2015";
        sha256 = "10hhdh5b5sa03s6b63y9bafm956jwilx41s71jbrzl63ccx8lxdq";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = {
          "rand_core" = {
            packageId = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "serde1" = [ "serde" "serde_derive" "rand_core/serde1" ];
        };
      };
    "rand_jitter 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_jitter";
        version = "0.1.4";
        edition = "2015";
        sha256 = "13nr4h042ab9l7qcv47bxrxw3gkf2pc3cni6c9pyi4nxla0mm7b6";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = {
          "libc" = {
            packageId = "libc 0.2.67 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            target = ((target."os" == "macos") || (target."os" == "ios"));
          };
          "rand_core" = "rand_core 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "windows");
            features = [ "profileapi" ];
          };
        };
        features = {
          "std" = [ "rand_core/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
    "rand_os 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_os";
        version = "0.1.3";
        edition = "2015";
        sha256 = "0ywwspizgs9g8vzn6m5ix9yg36n15119d6n792h7mk4r5vs0ww4j";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = {
          "cloudabi" = {
            packageId = "cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "cloudabi");
          };
          "fuchsia-cprng" = {
            packageId = "fuchsia-cprng 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "fuchsia");
          };
          "libc" = {
            packageId = "libc 0.2.67 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
          "rand_core" = {
            packageId = "rand_core 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "std" ];
          };
          "rdrand" = {
            packageId = "rdrand 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."env" == "sgx");
          };
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "minwindef" "ntsecapi" "winnt" ];
          };
        };
        features = {
        };
      };
    "rand_pcg 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_pcg";
        version = "0.1.2";
        edition = "2015";
        sha256 = "04qgi2ai2z42li5h4aawvxbpnlqyjfnipz9d6k73mdnl6p1xq938";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = {
          "rand_core" = "rand_core 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        buildDependencies = {
          "autocfg" = "autocfg 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "serde1" = [ "serde" "serde_derive" ];
        };
      };
    "rand_xorshift 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_xorshift";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0v365c4h4lzxwz5k5kp9m0661s0sss7ylv74if0xb4svis9sswnn";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = {
          "rand_core" = {
            packageId = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "serde1" = [ "serde" "serde_derive" ];
        };
      };
    "rayon 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rayon";
        version = "1.3.0";
        edition = "2018";
        sha256 = "1g5zc8681kv7aqzljs1hpdjfibbpradwzrgi49anz047sylvq7mw";
        authors = [
          "Niko Matsakis <niko@alum.mit.edu>"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = {
          "crossbeam-deque" = "crossbeam-deque 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "either" = {
            packageId = "either 1.5.3 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "rayon-core" = "rayon-core 1.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "rayon-core 1.7.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rayon-core";
        version = "1.7.0";
        edition = "2018";
        sha256 = "0pgnd6gl6vgmm7gqx8fbz13v5qrsqckyspvrm4n7cirx9z77id0q";
        authors = [
          "Niko Matsakis <niko@alum.mit.edu>"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = {
          "crossbeam-deque" = "crossbeam-deque 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "crossbeam-queue" = "crossbeam-queue 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "crossbeam-utils" = "crossbeam-utils 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "lazy_static" = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "num_cpus" = "num_cpus 1.12.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "rdrand 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rdrand";
        version = "0.4.0";
        edition = "2015";
        sha256 = "15hrcasn0v876wpkwab1dwbk9kvqwrb3iv4y4dibb6yxnfvzwajk";
        authors = [
          "Simonas Kazlauskas <rdrand@kazlauskas.me>"
        ];
        dependencies = {
          "rand_core" = {
            packageId = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "redox_syscall";
        version = "0.1.56";
        edition = "2015";
        sha256 = "0jcp8nd947zcy938bz09pzlmi3vyxfdzg92pjxdvvk0699vwcc26";
        libName = "syscall";
        authors = [
          "Jeremy Soller <jackpot51@gmail.com>"
        ];
        features = {
        };
      };
    "redox_users 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "redox_users";
        version = "0.3.4";
        edition = "2015";
        sha256 = "1x6mhzplqyn1glkhxxmm84v795p8sa1mnrcd3nhz8j2jfrq8c1qs";
        authors = [
          "Jose Narvaez <goyox86@gmail.com>"
          "Wesley Hershberger <mggmugginsmc@gmail.com>"
        ];
        dependencies = {
          "getrandom" = "getrandom 0.1.14 (registry+https://github.com/rust-lang/crates.io-index)";
          "redox_syscall" = "redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)";
          "rust-argon2" = "rust-argon2 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "regex 1.3.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "regex";
        version = "1.3.4";
        edition = "2015";
        sha256 = "1ad2vwdvayclgw0g263zy6y7na5id400wqbyad61n6riw09286c2";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "regex-syntax" = {
            packageId = "regex-syntax 0.6.14 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "std" "perf" "unicode" ];
          "perf" = [ "perf-cache" "perf-dfa" "perf-inline" "perf-literal" ];
          "perf-cache" = [ "thread_local" ];
          "perf-literal" = [ "aho-corasick" "memchr" ];
          "unicode" = [ "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
          "unicode-age" = [ "regex-syntax/unicode-age" ];
          "unicode-bool" = [ "regex-syntax/unicode-bool" ];
          "unicode-case" = [ "regex-syntax/unicode-case" ];
          "unicode-gencat" = [ "regex-syntax/unicode-gencat" ];
          "unicode-perl" = [ "regex-syntax/unicode-perl" ];
          "unicode-script" = [ "regex-syntax/unicode-script" ];
          "unicode-segment" = [ "regex-syntax/unicode-segment" ];
          "unstable" = [ "pattern" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
    "regex-syntax 0.6.14 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "regex-syntax";
        version = "0.6.14";
        edition = "2015";
        sha256 = "1jlyibmmpp3skv1lxpif5mfq57aqgx566asdkq6gjgvj8k0grala";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "unicode" ];
          "unicode" = [ "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
        };
      };
    "remove_dir_all 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "remove_dir_all";
        version = "0.5.2";
        edition = "2015";
        sha256 = "04sxg2ppvxiljc2i13bwvpbi540rf9d2a89cq0wmqf9pjvr3a1wm";
        authors = [
          "Aaronepower <theaaronepower@gmail.com>"
        ];
        dependencies = {
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "std" "errhandlingapi" "winerror" "fileapi" "winbase" ];
          };
        };
        features = {
        };
      };
    "rust-argon2 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rust-argon2";
        version = "0.7.0";
        edition = "2018";
        sha256 = "0xsg3i35nmbj36jdpwn7gwg1xck42a4z4p2c9j178f8p3jlkayb9";
        libName = "argon2";
        authors = [
          "Martijn Rijkeboer <mrr@sru-systems.com>"
        ];
        dependencies = {
          "base64" = "base64 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "blake2b_simd" = "blake2b_simd 0.5.10 (registry+https://github.com/rust-lang/crates.io-index)";
          "constant_time_eq" = "constant_time_eq 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "crossbeam-utils" = "crossbeam-utils 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "rustc-demangle 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rustc-demangle";
        version = "0.1.16";
        edition = "2015";
        sha256 = "0zmn448d0f898ahfkz7cir0fi0vk84dabjpw84mk6a1r6nf9vzmi";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
    "rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rustc_version";
        version = "0.2.3";
        edition = "2015";
        sha256 = "0rgwzbgs3i9fqjm1p4ra3n7frafmpwl29c8lw85kv1rxn7n2zaa7";
        authors = [
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        dependencies = {
          "semver" = "semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "rustversion 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rustversion";
        version = "1.0.2";
        edition = "2018";
        sha256 = "1gf0ca7pskk27177p1v0sbxr1676ikb0mxymb4plf8lb6qjk8hra";
        procMacro = true;
        build = "build/build.rs";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = "proc-macro2 1.0.9 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = {
            packageId = "syn 1.0.16 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "full" ];
          };
        };
        features = {
        };
      };
    "rustyline 6.0.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rustyline";
        version = "6.0.0";
        edition = "2018";
        sha256 = "0l9lbpwfl4rki03ghradxngj20ffh1sfb4d3j2qgv206ydw574wn";
        authors = [
          "Katsu Kawakami <kkawa1570@gmail.com>"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          "dirs" = {
            packageId = "dirs 2.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "libc" = "libc 0.2.67 (registry+https://github.com/rust-lang/crates.io-index)";
          "log" = "log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)";
          "memchr" = "memchr 2.3.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "nix" = {
            packageId = "nix 0.14.1 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
          "unicode-segmentation" = "unicode-segmentation 1.6.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "unicode-width" = "unicode-width 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
          "utf8parse" = {
            packageId = "utf8parse 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "consoleapi" "handleapi" "minwindef" "processenv" "winbase" "wincon" "winuser" ];
          };
        };
        features = {
          "default" = [ "with-dirs" ];
          "with-dirs" = [ "dirs" ];
        };
        resolvedDefaultFeatures = [ "default" "dirs" "with-dirs" ];
      };
    "scoped_threadpool 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "scoped_threadpool";
        version = "0.1.9";
        edition = "2015";
        sha256 = "1arqj2skcfr46s1lcyvnlmfr5456kg5nhn8k90xyfjnxkp5yga2v";
        authors = [
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        features = {
        };
      };
    "scopeguard 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "scopeguard";
        version = "1.1.0";
        edition = "2015";
        sha256 = "1smjw88w17v19g0ya4hv8c74q4z8pg7vcj0xqdn1bwk71xsg5pih";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
      };
    "semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "semver";
        version = "0.9.0";
        edition = "2015";
        sha256 = "0azak2lb2wc36s3x15az886kck7rpnksrw14lalm157rg9sc9z63";
        authors = [
          "Steve Klabnik <steve@steveklabnik.com>"
          "The Rust Project Developers"
        ];
        dependencies = {
          "semver-parser" = "semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "ci" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "semver-parser";
        version = "0.7.0";
        edition = "2015";
        sha256 = "1da66c8413yakx0y15k8c055yna5lyb6fr0fw9318kdwkrk5k12h";
        authors = [
          "Steve Klabnik <steve@steveklabnik.com>"
        ];
        features = {
        };
      };
    "sha2 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "sha2";
        version = "0.8.1";
        edition = "2015";
        sha256 = "1lsh03w4mlqxjp393x96bpfki3hf37v9vv12k986khwhsql5d88m";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = {
          "block-buffer" = "block-buffer 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "digest" = "digest 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "fake-simd" = "fake-simd 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "opaque-debug" = "opaque-debug 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "asm" = [ "sha2-asm" ];
          "asm-aarch64" = [ "asm" "libc" ];
          "default" = [ "std" ];
          "std" = [ "digest/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "sig 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "sig";
        version = "1.0.0";
        edition = "2015";
        sha256 = "1i8691652pac96vs1dacpki6iqippvxczabki2giyf917v5falhk";
        authors = [
          "adjivas <adjivas@users.noreply.github.com>"
          "emilio <emilio@users.noreply.github.com>"
        ];
        dependencies = {
          "libc" = "libc 0.2.67 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "strsim 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "strsim";
        version = "0.8.0";
        edition = "2015";
        sha256 = "0d3jsdz22wgjyxdakqnvdgmwjdvkximz50d9zfk4qlalw635qcvy";
        authors = [
          "Danny Guo <dannyguo91@gmail.com>"
        ];
        features = {
        };
      };
    "structopt 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "structopt";
        version = "0.3.9";
        edition = "2018";
        sha256 = "162yqi7s3bp1aw4sw0py0dlbcl0cwb1nkjnncgkzs4kn1mhl8qxp";
        authors = [
          "Guillaume Pinot <texitoi@texitoi.eu>"
          "others"
        ];
        dependencies = {
          "clap" = {
            packageId = "clap 2.33.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "lazy_static" = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "structopt-derive" = "structopt-derive 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "color" = [ "clap/color" ];
          "debug" = [ "clap/debug" ];
          "default" = [ "clap/default" ];
          "doc" = [ "clap/doc" ];
          "lints" = [ "clap/lints" ];
          "no_cargo" = [ "clap/no_cargo" ];
          "paw" = [ "structopt-derive/paw" ];
          "suggestions" = [ "clap/suggestions" ];
          "wrap_help" = [ "clap/wrap_help" ];
          "yaml" = [ "clap/yaml" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "structopt-derive 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "structopt-derive";
        version = "0.4.2";
        edition = "2018";
        sha256 = "1nda1jk0qdbry6xs6ly9hi1l5cwxpwsbmssfvxnnh0birplzmxj8";
        procMacro = true;
        authors = [
          "Guillaume Pinot <texitoi@texitoi.eu>"
        ];
        dependencies = {
          "heck" = "heck 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "proc-macro-error" = "proc-macro-error 0.4.9 (registry+https://github.com/rust-lang/crates.io-index)";
          "proc-macro2" = "proc-macro2 1.0.9 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = {
            packageId = "syn 1.0.16 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            features = [ "derive" "parsing" "proc-macro" ];
          };
        };
        features = {
        };
      };
    "subtle 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "subtle";
        version = "1.0.0";
        edition = "2015";
        sha256 = "0602qq101arxz39lgbc5fxbr01zffrvd9p5wgmsh36c5675kz8h1";
        authors = [
          "Isis Lovecruft <isis@patternsinthevoid.net>"
          "Henry de Valence <hdevalence@hdevalence.ca>"
        ];
        features = {
          "default" = [ "std" "i128" ];
        };
      };
    "syn 0.15.44 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "syn";
        version = "0.15.44";
        edition = "2015";
        sha256 = "09v11h141grmsnamd5j14mn8vpnfng6p60kdmsm8akz9m0qn7s1n";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = {
            packageId = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "quote" = {
            packageId = "quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
          };
          "unicode-xid" = "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "derive" "parsing" "printing" "clone-impls" "proc-macro" ];
          "printing" = [ "quote" ];
          "proc-macro" = [ "proc-macro2/proc-macro" "quote/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "clone-impls" "default" "derive" "parsing" "printing" "proc-macro" "quote" ];
      };
    "syn 1.0.16 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "syn";
        version = "1.0.16";
        edition = "2018";
        sha256 = "0yb2bk0hjglbablj1mh2p1gn3c3y44hwjih8plgrvazpfwzkrm6f";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = {
            packageId = "proc-macro2 1.0.9 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "quote" = {
            packageId = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
          };
          "unicode-xid" = "unicode-xid 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "derive" "parsing" "printing" "clone-impls" "proc-macro" ];
          "printing" = [ "quote" ];
          "proc-macro" = [ "proc-macro2/proc-macro" "quote/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "clone-impls" "default" "derive" "extra-traits" "full" "parsing" "printing" "proc-macro" "quote" "visit" ];
      };
    "syn-mid 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "syn-mid";
        version = "0.5.0";
        edition = "2018";
        sha256 = "0mcp969x5a3bjh1b0x17vsn21syggqrgkvk12gc97lzfpbyf5hkj";
        authors = [
          "Taiki Endo <te316e89@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = "proc-macro2 1.0.9 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = {
            packageId = "syn 1.0.16 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            features = [ "parsing" "printing" "derive" ];
          };
        };
        features = {
          "clone-impls" = [ "syn/clone-impls" ];
        };
      };
    "tempfile 3.1.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "tempfile";
        version = "3.1.0";
        edition = "2018";
        sha256 = "1r7ykxw90p5hm1g46i8ia33j5iwl3q252kbb6b074qhdav3sqndk";
        authors = [
          "Steven Allen <steven@stebalien.com>"
          "The Rust Project Developers"
          "Ashley Mannix <ashleymannix@live.com.au>"
          "Jason White <jasonaw0@gmail.com>"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = {
            packageId = "libc 0.2.67 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
          "rand" = "rand 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "redox_syscall" = {
            packageId = "redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "redox");
          };
          "remove_dir_all" = "remove_dir_all 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "fileapi" "handleapi" "winbase" ];
          };
        };
        features = {
        };
      };
    "textwrap 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "textwrap";
        version = "0.11.0";
        edition = "2015";
        sha256 = "0s25qh49n7kjayrdj4q3v0jk0jc6vy88rdw0bvgfxqlscpqpxi7d";
        authors = [
          "Martin Geisler <martin@geisler.net>"
        ];
        dependencies = {
          "unicode-width" = "unicode-width 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "tiff 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "tiff";
        version = "0.3.1";
        edition = "2015";
        sha256 = "15km3zf0qk700pbd2fighsw9yh8ivrldq6v50fbnjq042rihyw62";
        authors = [
          "ccgn"
          "bvssvni <bvssvni@gmail.com>"
          "nwin"
          "TyOverby <ty@pre-alpha.com>"
          "HeroicKatora"
          "Calum"
          "CensoredUsername <cens.username@gmail.com>"
          "Robzz"
          "birktj"
        ];
        dependencies = {
          "byteorder" = "byteorder 1.3.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "lzw" = "lzw 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "num-derive" = "num-derive 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "num-traits" = "num-traits 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "time 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "time";
        version = "0.1.42";
        edition = "2015";
        sha256 = "1ny809kmdjwd4b478ipc33dz7q6nq7rxk766x8cnrg6zygcksmmx";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "libc" = "libc 0.2.67 (registry+https://github.com/rust-lang/crates.io-index)";
          "redox_syscall" = {
            packageId = "redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "redox");
          };
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "std" "minwinbase" "minwindef" "ntdef" "profileapi" "sysinfoapi" "timezoneapi" ];
          };
        };
        features = {
        };
      };
    "toml 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "toml";
        version = "0.2.1";
        edition = "2015";
        sha256 = "0p4rkaqhmk4fp6iqpxfgp3p98hxhbs2wmla3fq531n875h922yqs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "rustc-serialize" ];
        };
      };
    "typenum 1.11.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "typenum";
        version = "1.11.2";
        edition = "2015";
        sha256 = "0pdbfkqzp4hwj21b2gv79kh1s1sgr587bd4s039qzalg5jiniiz8";
        build = "build/main.rs";
        authors = [
          "Paho Lurie-Gregg <paho@paholg.com>"
          "Andre Bogus <bogusandre@gmail.com>"
        ];
        features = {
        };
      };
    "unicode-segmentation 1.6.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicode-segmentation";
        version = "1.6.0";
        edition = "2015";
        sha256 = "1i9a9gzj4i7iqwrgfs3dagf3h2b9qxdy7bviykhnsjrxm3azgsyc";
        authors = [
          "kwantam <kwantam@gmail.com>"
          "Manish Goregaokar <manishsmail@gmail.com>"
        ];
        features = {
        };
      };
    "unicode-width 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicode-width";
        version = "0.1.7";
        edition = "2015";
        sha256 = "052w5vx2k332h7ycsxsc61rr7hj0szmfsky94f61228z3znsnq9h";
        authors = [
          "kwantam <kwantam@gmail.com>"
          "Manish Goregaokar <manishsmail@gmail.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "std" "core" "compiler_builtins" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicode-xid";
        version = "0.1.0";
        edition = "2015";
        sha256 = "05wdmwlfzxhq3nhsxn6wx4q8dhxzzfb9szsz6wiw092m1rjj01zj";
        authors = [
          "erick.tryzelaar <erick.tryzelaar@gmail.com>"
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "unicode-xid 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicode-xid";
        version = "0.2.0";
        edition = "2015";
        sha256 = "1c85gb3p3qhbjvfyjb31m06la4f024jx319k10ig7n47dz2fk8v7";
        authors = [
          "erick.tryzelaar <erick.tryzelaar@gmail.com>"
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "utf8parse 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "utf8parse";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1qplgxcw9bjl48m4rlj7vk8i2qqjkj6dc7h3b88dxx1xpzx684v6";
        authors = [
          "Joe Wilm <joe@jwilm.com>"
        ];
        features = {
        };
      };
    "uuid 0.7.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "uuid";
        version = "0.7.4";
        edition = "2015";
        sha256 = "1kzjah6i8vf51hrla6qnplymaqx2fadhhlnbvgivgld311lqyz9m";
        authors = [
          "Ashley Mannix<ashleymannix@live.com.au>"
          "Christopher Armstrong"
          "Dylan DPC<dylan.dpc@gmail.com>"
          "Hunar Roop Kahlon<hunar.roop@gmail.com>"
        ];
        dependencies = {
          "rand" = {
            packageId = "rand 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "const_fn" = [ "nightly" ];
          "default" = [ "std" ];
          "guid" = [ "winapi" ];
          "stdweb" = [ "rand/stdweb" ];
          "u128" = [ "byteorder" ];
          "v3" = [ "md5" ];
          "v4" = [ "rand" ];
          "v5" = [ "sha1" ];
          "wasm-bindgen" = [ "rand/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "default" "rand" "std" "v4" ];
      };
    "vec_map 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "vec_map";
        version = "0.8.1";
        edition = "2015";
        sha256 = "1jj2nrg8h3l53d43rwkpkikq5a5x15ms4rf1rw92hp5lrqhi8mpi";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Jorge Aparicio <japaricious@gmail.com>"
          "Alexis Beingessner <a.beingessner@gmail.com>"
          "Brian Anderson <>"
          "tbu- <>"
          "Manish Goregaokar <>"
          "Aaron Turon <aturon@mozilla.com>"
          "Adolfo Ochagavía <>"
          "Niko Matsakis <>"
          "Steven Fackler <>"
          "Chase Southwood <csouth3@illinois.edu>"
          "Eduard Burtescu <>"
          "Florian Wilkens <>"
          "Félix Raimundo <>"
          "Tibor Benke <>"
          "Markus Siemens <markus@m-siemens.de>"
          "Josh Branchaud <jbranchaud@gmail.com>"
          "Huon Wilson <dbau.pp@gmail.com>"
          "Corey Farwell <coref@rwell.org>"
          "Aaron Liblong <>"
          "Nick Cameron <nrc@ncameron.org>"
          "Patrick Walton <pcwalton@mimiga.net>"
          "Felix S Klock II <>"
          "Andrew Paseltiner <apaseltiner@gmail.com>"
          "Sean McArthur <sean.monstar@gmail.com>"
          "Vadim Petrochenkov <>"
        ];
        features = {
          "eders" = [ "serde" ];
        };
      };
    "void 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "void";
        version = "1.0.2";
        edition = "2015";
        sha256 = "0h1dm0dx8dhf56a83k68mijyxigqhizpskwxfdrs1drwv2cdclv3";
        authors = [
          "Jonathan Reem <jonathan.reem@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "wasi 0.9.0+wasi-snapshot-preview1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "wasi";
        version = "0.9.0+wasi-snapshot-preview1";
        edition = "2018";
        sha256 = "0xa6b3rnsmhi13nvs9q51wmavx51yzs5qdbc7bvs0pvs6iar3hsd";
        authors = [
          "The Cranelift Project Developers"
        ];
        features = {
          "default" = [ "std" ];
          "rustc-dep-of-std" = [ "compiler_builtins" "core" "rustc-std-workspace-alloc" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "which 2.0.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "which";
        version = "2.0.1";
        edition = "2015";
        sha256 = "0lj0v21zriscaq5p7rb1r0j34z5yspjvwnldklbr45pxdp9zbgh7";
        authors = [
          "Harry Fei <tiziyuanfang@gmail.com>"
        ];
        dependencies = {
          "failure" = {
            packageId = "failure 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            features = [ "std" ];
          };
          "libc" = "libc 0.2.67 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi";
        version = "0.3.8";
        edition = "2015";
        sha256 = "084ialbgww1vxry341fmkg5crgpvab3w52ahx1wa54yqjgym0vxs";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = {
          "winapi-i686-pc-windows-gnu" = {
            packageId = "winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (stdenv.hostPlatform.config == "i686-pc-windows-gnu");
          };
          "winapi-x86_64-pc-windows-gnu" = {
            packageId = "winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (stdenv.hostPlatform.config == "x86_64-pc-windows-gnu");
          };
        };
        features = {
          "debug" = [ "impl-debug" ];
        };
        resolvedDefaultFeatures = [ "consoleapi" "errhandlingapi" "fileapi" "handleapi" "knownfolders" "libloaderapi" "minwinbase" "minwindef" "ntdef" "ntsecapi" "objbase" "processenv" "profileapi" "shlobj" "std" "sysinfoapi" "timezoneapi" "winbase" "wincon" "winerror" "winnt" "winuser" ];
      };
    "winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi-i686-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "05ihkij18r4gamjpxj4gra24514can762imjzlmak5wlzidplzrp";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        features = {
        };
      };
    "winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi-x86_64-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "0n1ylmlsb8yg1v583i4xy0qmqg42275flvbc51hdqjjfjcl9vlbj";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        features = {
        };
      };
    "zeromq-src 0.1.8+4.3.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "zeromq-src";
        version = "0.1.8+4.3.2";
        edition = "2018";
        sha256 = "1zk5xf3pd5yaz1l9q23bffvdq5xzcl6x11ld4pmkdc0x8y4bja4r";
        authors = [
          "jean-airoldie <maxence.caron@protonmail.com>"
        ];
        dependencies = {
          "cmake" = "cmake 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "zmq 0.9.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "zmq";
        version = "0.9.2";
        edition = "2018";
        sha256 = "1rlar1hl5nbpx48jbc07acngs8q774pv66vrlxqsqxmhrvi24i57";
        authors = [
          "a.rottmann@gmx.at"
          "erick.tryzelaar@gmail.com"
        ];
        dependencies = {
          "bitflags" = "bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = "libc 0.2.67 (registry+https://github.com/rust-lang/crates.io-index)";
          "log" = "log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)";
          "zmq-sys" = "zmq-sys 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "zmq_has" ];
          "vendored" = [ "zmq-sys/vendored" ];
        };
        resolvedDefaultFeatures = [ "vendored" ];
      };
    "zmq-sys 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "zmq-sys";
        version = "0.11.0";
        edition = "2015";
        sha256 = "0ns0c999n2mzn94g5rmj8vl2fqr8lxdc9czm2nhmzmi96a8ljcqb";
        build = "build/main.rs";
        authors = [
          "a.rottmann@gmx.at"
          "erick.tryzelaar@gmail.com"
        ];
        dependencies = {
          "libc" = "libc 0.2.67 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        buildDependencies = {
          "metadeps" = "metadeps 1.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "zeromq-src" = {
            packageId = "zeromq-src 0.1.8+4.3.2 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "vendored" = [ "zeromq-src" ];
        };
        resolvedDefaultFeatures = [ "vendored" "zeromq-src" ];
      };
  };

  #
  # crate2nix/default.nix (excerpt start)
  # 

  # Target (platform) data for conditional dependencies.
  # This corresponds roughly to what buildRustCrate is setting.
  target = {
      unix = true;
      windows = false;
      # We don't support tests yet, so this is true for now.
      test = false;

      # This doesn't appear to be officially documented anywhere yet.
      # See https://github.com/rust-lang-nursery/rust-forge/issues/101.
      os = if stdenv.hostPlatform.isDarwin
        then "macos"
        else stdenv.hostPlatform.parsed.kernel.name;
      arch = stdenv.hostPlatform.parsed.cpu.name;
      family = "unix";
      env = "gnu";
      endian = if stdenv.hostPlatform.parsed.cpu.significantByte.name == "littleEndian" then "little" else "big";
      pointer_width = toString stdenv.hostPlatform.parsed.cpu.bits;
      vendor = stdenv.hostPlatform.parsed.vendor.name;
      debug_assertions = false;
  };

  /* Filters common temp files and build files */
  # TODO(pkolloch): Substitute with gitignore filter
  sourceFilter = name: type:
    let baseName = builtins.baseNameOf (builtins.toString name);
    in ! (
      # Filter out git
      baseName == ".gitignore" ||
      (type == "directory" && baseName == ".git" ) ||

      # Filter out build results
      (type == "directory" && (
        baseName == "target" ||
        baseName == "_site" ||
        baseName == ".sass-cache" ||
        baseName == ".jekyll-metadata" ||
        baseName == "build-artifacts"
        )) ||

      # Filter out nix-build result symlinks
      (type == "symlink" && lib.hasPrefix "result" baseName) ||

      # Filter out IDE config
      (type == "directory" && (
        baseName == ".idea" ||
        baseName == ".vscode"
        )) ||
      lib.hasSuffix ".iml" baseName ||

      # Filter out nix build files
      # lib.hasSuffix ".nix" baseName ||

      # Filter out editor backup / swap files.
      lib.hasSuffix "~" baseName ||
      builtins.match "^\\.sw[a-z]$$" baseName != null ||
      builtins.match "^\\..*\\.sw[a-z]$$" baseName != null ||
      lib.hasSuffix ".tmp" baseName ||
      lib.hasSuffix ".bak" baseName ||
      baseName == "tests.nix"
    );

  /* A restricted overridable version of  buildRustCrateWithFeaturesImpl. */
  buildRustCrateWithFeatures = {packageId, features, crateOverrides ? defaultCrateOverrides}:
    lib.makeOverridable
      ({features, crateOverrides}: buildRustCrateWithFeaturesImpl {inherit packageId features crateOverrides;})
      { inherit features crateOverrides; };

  /* Returns a buildRustCrate derivation for the given packageId and features. */
  buildRustCrateWithFeaturesImpl = { crateConfigs? crates, packageId, features, crateOverrides } @ args:
    assert (builtins.isAttrs crateConfigs);
    assert (builtins.isString packageId);
    assert (builtins.isList features);

    let mergedFeatures = mergePackageFeatures args;
        buildByPackageId = packageId:
          let features = mergedFeatures."${packageId}" or [];
              crateConfig = lib.filterAttrs (n: v: n != "resolvedDefaultFeatures") crateConfigs."${packageId}";
              dependencies =
                dependencyDerivations buildByPackageId features (crateConfig.dependencies or {});
              buildDependencies =
                dependencyDerivations buildByPackageId features (crateConfig.buildDependencies or {});
              dependenciesWithRenames =
                lib.filterAttrs (n: v: v ? "rename")
                  (crateConfig.buildDependencies or {} // crateConfig.dependencies or {});
              crateRenames =
                lib.mapAttrs (name: value: value.rename or name) dependenciesWithRenames;
          in buildRustCrate (crateConfig // { inherit features dependencies buildDependencies crateRenames; });
    in buildByPackageId packageId;

  /* Returns the actual derivations for the given dependencies. */
  dependencyDerivations = buildByPackageId: features: dependencies:
    assert (builtins.isFunction buildByPackageId);
    assert (builtins.isList features);
    assert (builtins.isAttrs dependencies);

    let enabledDependencies = filterEnabledDependencies dependencies features;
        depDerivation = dependencyName: dependency:
        buildByPackageId (dependencyPackageId dependency);
    in builtins.attrValues (lib.mapAttrs depDerivation enabledDependencies);

  /* Returns differences between cargo default features and crate2nix default features.
   *
   * This is useful for verifying the feature resolution in crate2nix.
   */
  diffDefaultPackageFeatures = {crateConfigs ? crates, packageId}:
    assert (builtins.isAttrs crateConfigs);

    let prefixValues = prefix: lib.mapAttrs (n: v: { "${prefix}" = v; });
        mergedFeatures =
          prefixValues
            "crate2nix"
            (mergePackageFeatures {inherit crateConfigs packageId; features = ["default"]; });
        configs = prefixValues "cargo" crateConfigs;
        combined = lib.foldAttrs (a: b: a // b) {} [ mergedFeatures configs ];
        onlyInCargo = builtins.attrNames (lib.filterAttrs (n: v: !(v ? "crate2nix" ) && (v ? "cargo")) combined);
        onlyInCrate2Nix = builtins.attrNames (lib.filterAttrs (n: v: (v ? "crate2nix" ) && !(v ? "cargo")) combined);
        differentFeatures = lib.filterAttrs
          (n: v:
          (v ? "crate2nix" )
          && (v ? "cargo")
          && (v.crate2nix.features or []) != (v."cargo".resolved_default_features or []))
          combined;
    in builtins.toJSON { inherit onlyInCargo onlyInCrate2Nix differentFeatures; };

  /* Returns the feature configuration by package id for the given input crate. */
  mergePackageFeatures = {crateConfigs ? crates, packageId, features, ...} @ args:
    assert (builtins.isAttrs crateConfigs);
    assert (builtins.isString packageId);
    assert (builtins.isList features);

    let packageFeatures = listOfPackageFeatures args;
        grouped = lib.groupBy (x: x.packageId) packageFeatures;
    in lib.mapAttrs (n: v: sortedUnique (builtins.concatLists (builtins.map (v: v.features) v))) grouped;

  /* Returns a { packageId, features } attribute set for every package needed for building the
     package for the given packageId with the given features.

     Returns multiple, potentially conflicting attribute sets for dependencies that are reachable
     by multiple paths in the dependency tree.
  */
  listOfPackageFeatures = {crateConfigs ? crates, packageId, features, dependencyPath? [packageId], ...} @ args:
    assert (builtins.isAttrs crateConfigs);
    assert (builtins.isString packageId);
    assert (builtins.isList features);

    let
        crateConfig = crateConfigs."${packageId}" or (builtins.throw "Package not found: ${packageId}");
        expandedFeatures = expandFeatures (crateConfig.features or {}) features;

        depWithResolvedFeatures = dependencyName: dependency:
          let packageId = dependencyPackageId dependency;
              features = dependencyFeatures expandedFeatures dependencyName dependency;
          in { inherit packageId features; };

        resolveDependencies = path: dependencies:
          assert (builtins.isAttrs dependencies);

          let enabledDependencies = filterEnabledDependencies dependencies expandedFeatures;
              directDependencies =
                builtins.attrValues (lib.mapAttrs depWithResolvedFeatures enabledDependencies);
          in builtins.concatMap
            ({packageId, features}: listOfPackageFeatures {
              # This is purely for debugging.
              dependencyPath = dependencyPath ++ [path packageId];
              inherit crateConfigs packageId features;
            })
             directDependencies;

        resolvedDependencies = builtins.concatLists
          [
            (resolveDependencies "dependencies" (crateConfig.dependencies or {}))
            (resolveDependencies "buildDependencies" (crateConfig.buildDependencies or {}))
          ];

    in [{inherit packageId; features = expandedFeatures;}] ++ resolvedDependencies;

  /* Returns the enabled dependencies given the enabled features. */
  filterEnabledDependencies = dependencies: features:
    assert (builtins.isAttrs dependencies);
    assert (builtins.isList features);

    lib.filterAttrs
      (depName: dep:
        builtins.isString dep
        || dep.target or true
        && (!(dep.optional or false) || builtins.any (doesFeatureEnableDependency depName) features))
      dependencies;

  /* Returns whether the given feature should enable the given dependency. */
  doesFeatureEnableDependency = depName: feature:
    let prefix = "${depName}/";
        len = builtins.stringLength prefix;
        startsWithPrefix = builtins.substring 0 len feature == prefix;
    in feature == depName || startsWithPrefix;

  /* Returns the expanded features for the given inputFeatures by applying the rules in featureMap.

     featureMap is an attribute set which maps feature names to lists of further feature names to enable in case this
     feature is selected.
  */
  expandFeatures = featureMap: inputFeatures:
    assert (builtins.isAttrs featureMap);
    assert (builtins.isList inputFeatures);

    let expandFeature = feature:
          assert (builtins.isString feature);
          [feature] ++ (expandFeatures featureMap (featureMap."${feature}" or []));
        outFeatures = builtins.concatMap expandFeature inputFeatures;
    in sortedUnique outFeatures;

  /* The package ID of the given dependency. */
  dependencyPackageId = dependency: if builtins.isString dependency then dependency else dependency.packageId;

  /* Returns the actual dependencies for the given dependency. */
  dependencyFeatures = features: dependencyName: dependency:
    assert (builtins.isList features);
    assert (builtins.isString dependencyName);
    assert (builtins.isAttrs dependency || builtins.isString dependency);

    let defaultOrNil = if builtins.isString dependency || dependency.usesDefaultFeatures or true
                       then ["default"]
                       else [];
        explicitFeatures = if builtins.isString dependency then [] else dependency.features or [];
        additionalDependencyFeatures =

          let dependencyPrefix = dependencyName+"/";
              dependencyFeatures =
                builtins.filter (f: lib.hasPrefix dependencyPrefix f) features;
          in builtins.map (lib.removePrefix dependencyPrefix) dependencyFeatures;
    in
      defaultOrNil ++ explicitFeatures ++ additionalDependencyFeatures;

  /* Sorts and removes duplicates from a list of strings. */
  sortedUnique = features:
    assert (builtins.isList features);
    assert (builtins.all builtins.isString features);

    let outFeaturesSet = lib.foldl (set: feature: set // {"${feature}" = 1;} ) {} features;
        outFeaturesUnique = builtins.attrNames outFeaturesSet;
    in builtins.sort (a: b: a < b) outFeaturesUnique;

  #
  # crate2nix/default.nix (excerpt end)
  # 

}
